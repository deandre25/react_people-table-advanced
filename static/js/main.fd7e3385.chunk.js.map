{"version":3,"sources":["pages/HomePage.tsx","types/SearchParams.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/SortLink.tsx","components/PeoplePage.tsx","pages/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","SearchParams","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CENTURIES","PeopleFilters","setSearchParams","sex","get","SEX","query","QUERY","centuries","getAll","classNames","type","placeholder","onChange","event","target","map","century","includes","filter","cent","Loader","PeopleTable","person","name","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","SortLink","sortBy","isReversed","ORDER","sortField","SORT","order","sort","getFilteredPeople","people","preparedPeople","length","Math","ceil","getCentury","toCaseQuery","toLowerCase","person1","person2","localeCompare","reverse","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useEffect","getPeople","peopleFromServer","catch","finally","NotFoundPage","hasActive","isActive","Navbar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"wPAEaA,EAAqB,kBAChC,oBAAIC,UAAU,QAAd,sBADgC,E,+BCFtBC,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,UAAYA,EAAZ,cAAYA,EAAZ,sBAAYA,EAAZ,YAAYA,EAAZ,cAAYA,CAAZ,M,gBCQO,SAASC,EACdC,EACAC,GAGA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YA+BhB,OAjBAC,OAAOC,QAAQL,GACZM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IAEvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZX,EAAUY,OAAON,EAAKK,EACvB,KAEDX,EAAUa,IAAIP,EAAKC,EAEtB,IAGIP,EAAUE,UAClB,C,4BC/BYY,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuBC,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBAIEC,GAAI,CACFC,OAAQxB,EAAcsB,EAAcH,KAElCC,GAPN,aASGF,IAGN,EC3BKO,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,MAE9BC,EAA0B,WACrC,MAAwCL,cAAxC,mBAAOC,EAAP,KAAqBK,EAArB,KAEMC,EAAMN,EAAaO,IAAI9B,EAAa+B,MAAQ,GAC5CC,EAAQT,EAAaO,IAAI9B,EAAaiC,QAAU,GAChDC,EAAYX,EAAaY,OAAOnC,EAAa0B,YAAc,GAQjE,OACE,sBAAK3B,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,aAAa,UAAQ,YAAlC,UACE,cAAC,EAAD,CACEqB,OAAQ,CAAES,IAAK,MACf9B,UAAWqC,IAAW,CACpB,aAAcP,IAHlB,iBAQA,cAAC,EAAD,CACET,OAAQ,CAAES,IAAK,KACf9B,UAAWqC,IAAW,CACpB,YAAqB,MAARP,IAHjB,kBAQA,cAAC,EAAD,CACET,OAAQ,CAAES,IAAK,KACf9B,UAAWqC,IAAW,CACpB,YAAqB,MAARP,IAHjB,uBAUF,qBAAK9B,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACE,UAAQ,aACRsC,KAAK,SACLtC,UAAU,QACVuC,YAAY,SACZ3B,MAAOqB,EACPO,SA7CV,SAA2BC,GACzBZ,EACE3B,EAAcsB,EAAc,CAAES,MAAOQ,EAAMC,OAAO9B,OAAS,OAE9D,IA4CO,sBAAMZ,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SACG2B,EAAUgB,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEE,UAAQ,UACR5C,UAAWqC,IAAW,cAAe,CACnC,UAAWF,EAAUU,SAASD,KAEhCvB,OAAQ,CACNc,UAAWA,EAAUU,SAASD,GAC1BT,EAAUW,QAAO,SAAAC,GAAI,OAAIH,IAAYG,CAAhB,IADd,sBAEHZ,GAFG,CAEQS,KATvB,SAYGA,GAXIA,EAFM,MAkBjB,qBAAK5C,UAAU,mBAAf,SACE,cAAC,EAAD,CACE,UAAQ,aACRA,UAAU,gCACVqB,OAAQ,CAAEc,UAAW,MAHvB,wBAWN,qBAAKnC,UAAU,cAAf,SACE,cAAC,EAAD,CACEA,UAAU,0CACVqB,OAAQ,CACNS,IAAK,KACLG,MAAO,KACPE,UAAW,MALf,mCAaP,ECpHYa,G,MAAS,kBACpB,qBAAKhD,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCQTiD,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE3CC,EASED,EATFC,KACArB,EAQEoB,EARFpB,IACAsB,EAOEF,EAPFE,KACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,WACAC,EAGEN,EAHFM,KACAC,EAEEP,EAFFO,OACAC,EACER,EADFQ,OAGMC,EAAeC,cAAfD,WAER,OACE,qBACE,UAAQ,SACR3D,UAAWqC,IAAW,CACpB,yBAA0BmB,IAASG,IAHvC,UAME,6BACE,cAAC,IAAD,CACE3D,UAAWqC,IAAW,CACpB,kBAA2B,MAARP,IAGrBL,GAAIkC,EAAU,aAASH,GAASA,EALlC,SAOGL,MAIL,6BAAKrB,IACL,6BAAKsB,IACL,6BAAKC,IACL,6BACGI,EACC,cAAC,IAAD,CACEzD,UAAU,kBACVyB,GAAE,aAAQgC,EAAOD,MAFnB,SAIGD,IAGHA,GAAc,MAGlB,6BACGG,EACC,cAAC,IAAD,CAAMjC,GAAE,aAAQiC,EAAOF,MAAvB,SACGF,IAGHA,GAAc,QAKvB,E,cCnEKO,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,C,sDAEM,iHAEED,EAAK,KACTK,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAJX,4C,sBCEA,IAAMC,EAA4B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1C,EAAuBjD,cAAhBC,EAAP,oBAEMiD,EAAajD,EAAaO,IAAI9B,EAAayE,OAC3CC,EAAYnD,EAAaO,IAAI9B,EAAa2E,OAAS,GAEnDvD,EAAS,CACbwD,MAAQL,IAAWG,GAAcF,EAAuB,KAAT,OAC/CK,KAAON,IAAWG,GAAaF,EAAc,KAAOD,GAGtD,OACE,cAAC,EAAD,CAAYnD,OAAQA,EAApB,SACE,sBAAMrB,UAAU,OAAhB,SACE,mBACEA,UAAWqC,IACT,MACA,CACE,UAAWsC,IAAcH,EACzB,aAAcG,IAAcH,IAAWC,EACvC,eAAgBE,IAAcH,GAAUC,SAOrD,EC3BKM,EAAoB,SACxBC,EACAlD,EACAG,EACAE,EACAwC,EACAE,GAEA,IAAII,EAAc,YAAOD,GAMzB,GAJIlD,IACFmD,EAAiBA,EAAenC,QAAO,SAAAI,GAAM,OAAIA,EAAOpB,MAAQA,CAAnB,KAG3CK,EAAU+C,OAAS,EAAG,CAGxBD,EAAiBA,EAAenC,QAC9B,SAAAI,GAAM,OAAIf,EAAUU,SAHH,SAACK,GAAD,OAAoBiC,KAAKC,KAAKlC,EAAOE,KAAO,IAA5C,CAIfiC,CAAWnC,GAAQ3C,WADf,GAIT,CAED,GAAI0B,EAAO,CACT,IAAMqD,EAAcrD,EAAMsD,cAE1BN,EAAiBA,EACdnC,QAAO,SAAAI,GAAM,eAAIA,EAAOC,KAAKN,SAASyC,KAArB,UACbpC,EAAOK,kBADM,aACb,EAAmBV,SAASyC,MADf,UAEbpC,EAAOI,kBAFM,aAEb,EAAmBT,SAASyC,GAFnB,GAGjB,CAuBD,OArBIX,IACFM,EAAeH,MAAK,SAACU,EAASC,GAC5B,OAAQd,GACN,IAAK,OACL,IAAK,MACH,OAAOa,EAAQb,GAAWe,cAAcD,EAAQd,IAElD,IAAK,OACL,IAAK,OACH,OAAOa,EAAQb,GAAac,EAAQd,GAEtC,QACE,OAAO,EAEZ,IAEa,SAAVE,GACFI,EAAeU,WAIZV,CACR,EAEYW,EAAuB,WAClC,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAmB,IAA/C,mBAAOb,EAAP,KAAekB,EAAf,KAEA,EAAuB3E,cAAhBC,EAAP,oBAEMM,EAAMN,EAAaO,IAAI9B,EAAa+B,KACpCC,EAAQT,EAAaO,IAAI9B,EAAaiC,OACtCC,EAAYX,EAAaY,OAAOnC,EAAa0B,WAC7CgD,EAAYnD,EAAaO,IAAI9B,EAAa2E,MAC1CC,EAAQrD,EAAaO,IAAI9B,EAAayE,OAEtCO,EAAiBF,EACrBC,EACAlD,EACAG,EACAE,EACAwC,EACAE,GAYF,OATAsB,qBAAU,YFjFL,WAAP,gCEkFIC,GACGjC,MAAK,SAACkC,GACLH,EAAUG,EACX,IACAC,OAAM,kBAAML,GAAW,EAAjB,IACNM,SAAQ,kBAAMR,GAAa,EAAnB,GACZ,IAGC,qCACE,oBAAI/F,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACG8F,GACC,cAAC,EAAD,IAGDE,GACC,mBAAG,UAAQ,qBAAX,mCAGAF,IAAcd,EAAOE,QACrB,mBAAG,UAAQ,kBAAX,iDAOCF,EAAOE,QACR,wBACE,UAAQ,cACRlF,UAAU,uDAFZ,UAKE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CAAUwE,OAAO,cAIrB,6BACE,uBAAMxE,UAAU,8BAAhB,gBAEE,cAAC,EAAD,CAAUwE,OAAO,aAIrB,6BACE,uBAAMxE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CAAUwE,OAAO,cAIrB,6BACE,uBAAMxE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CAAUwE,OAAO,cAIrB,wCACA,6CAIJ,gCACGS,EAAetC,KAAI,SAAAO,GAAM,OACxB,cAAC,EAAD,CACEA,OAAQA,GACHA,EAAOM,KAHU,qBAe7C,ECtLYgD,EAAyB,kBACpC,oBAAIxG,UAAU,QAAd,2BADoC,ECChCyG,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCrE,IACzD,cACA,CAAE,8BAA+BqE,GAFjB,EAKLC,EAAS,WACpB,OACE,qBACE,UAAQ,MACR3G,UAAU,iCACV4G,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK5G,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASA,UAAWyG,EAAWhF,GAAG,IAAlC,kBAIA,cAAC,IAAD,CACE,eAAa,OACbzB,UAAWyG,EACXhF,GAAG,UAHL,0BAWT,ECpBYoF,G,MAAM,SAANA,IACX,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM7G,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO8G,KAAK,IAAIC,QAAS,cAACF,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOG,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtF,GAAG,IAAIwF,SAAO,MAEpD,eAAC,IAAD,CAAOH,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,YAIxC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMpC,GC7BDG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.fd7e3385.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export enum SearchParams {\n  SEX = 'sex',\n  QUERY = 'query',\n  CENTURIES = 'centuries',\n  SORT = 'sort',\n  ORDER = 'order',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport React from 'react';\n\nimport { SearchParams } from '../types/SearchParams';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(SearchParams.SEX) || '';\n  const query = searchParams.get(SearchParams.QUERY) || '';\n  const centuries = searchParams.getAll(SearchParams.CENTURIES) || [];\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchParams(\n      getSearchWith(searchParams, { query: event.target.value || null }),\n    );\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': !sex,\n          })}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(cent => century !== cent)\n                    : [...centuries, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            query: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n          // to={`../${slug}`}\n          to={personSlug ? `../${slug}` : slug}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link to={`../${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../types/SearchParams';\n\ntype Props = {\n  sortBy: string\n};\n\nexport const SortLink: React.FC<Props> = ({ sortBy }) => {\n  const [searchParams] = useSearchParams();\n\n  const isReversed = searchParams.get(SearchParams.ORDER);\n  const sortField = searchParams.get(SearchParams.SORT) || '';\n\n  const params = {\n    order: (sortBy === sortField && !isReversed) ? 'desc' : null,\n    sort: (sortBy === sortField && isReversed) ? null : sortBy,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={classNames(\n            'fas',\n            {\n              'fa-sort': sortField !== sortBy,\n              'fa-sort-up': sortField === sortBy && !isReversed,\n              'fa-sort-down': sortField === sortBy && isReversed,\n            },\n          )}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { SortLink } from './SortLink';\nimport { SearchParams } from '../types/SearchParams';\n\nconst getFilteredPeople = (\n  people: Person[],\n  sex: string | null,\n  query: string | null,\n  centuries: string[],\n  sortField: string | null,\n  order: string | null,\n): Person[] => {\n  let preparedPeople = [...people];\n\n  if (sex) {\n    preparedPeople = preparedPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    const getCentury = (person: Person) => Math.ceil(person.born / 100);\n\n    preparedPeople = preparedPeople.filter(\n      person => centuries.includes(\n        getCentury(person).toString(),\n      ),\n    );\n  }\n\n  if (query) {\n    const toCaseQuery = query.toLowerCase();\n\n    preparedPeople = preparedPeople\n      .filter(person => person.name.includes(toCaseQuery)\n        || person.motherName?.includes(toCaseQuery)\n        || person.fatherName?.includes(toCaseQuery));\n  }\n\n  if (sortField) {\n    preparedPeople.sort((person1, person2) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n          return person1[sortField].localeCompare(person2[sortField]);\n\n        case 'born':\n        case 'died':\n          return person1[sortField] - person2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (order === 'desc') {\n      preparedPeople.reverse();\n    }\n  }\n\n  return preparedPeople;\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get(SearchParams.SEX);\n  const query = searchParams.get(SearchParams.QUERY);\n  const centuries = searchParams.getAll(SearchParams.CENTURIES);\n  const sortField = searchParams.get(SearchParams.SORT);\n  const order = searchParams.get(SearchParams.ORDER);\n\n  const preparedPeople = getFilteredPeople(\n    people,\n    sex,\n    query,\n    centuries,\n    sortField,\n    order,\n  );\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {!isLoading && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {/* <p>There are no people matching the current search criteria</p> */}\n\n              {!!people.length && (\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table is-striped is-hoverable\n                    is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>\n                        <span className=\"is-flex is-flex-wrap-nowrap\">\n                          Name\n                          <SortLink sortBy=\"name\" />\n                        </span>\n                      </th>\n\n                      <th>\n                        <span className=\"is-flex is-flex-wrap-nowrap\">\n                          Sex\n                          <SortLink sortBy=\"sex\" />\n                        </span>\n                      </th>\n\n                      <th>\n                        <span className=\"is-flex is-flex-wrap-nowrap\">\n                          Born\n                          <SortLink sortBy=\"born\" />\n                        </span>\n                      </th>\n\n                      <th>\n                        <span className=\"is-flex is-flex-wrap-nowrap\">\n                          Died\n                          <SortLink sortBy=\"died\" />\n                        </span>\n                      </th>\n\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {preparedPeople.map(person => (\n                      <PeopleTable\n                        person={person}\n                        key={person.slug}\n                      />\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst hasActive = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={hasActive} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={hasActive}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<App />}>\n              <Route index element={<HomePage />} />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n              <Route path=\"people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":personSlug?\" element={<PeoplePage />} />\n              </Route>\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}